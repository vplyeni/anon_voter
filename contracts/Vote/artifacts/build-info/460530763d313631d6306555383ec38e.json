{
	"id": "460530763d313631d6306555383ec38e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Vote/KeyHolder.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.2;\r\n\r\ncontract KeyHolderContract{\r\n\r\n    address private owner;\r\n    address private contractAddress;\r\n\r\n    mapping(address=>bool) public VOTERS;\r\n     \r\n    modifier onlyOwner{\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    modifier noZeroAddress(address adr){\r\n        require(adr!=address(0));\r\n        _;\r\n    }\r\n\r\n    modifier onlyVoters{\r\n        require(VOTERS[msg.sender]);\r\n        _;\r\n    }\r\n\r\n    constructor() {\r\n        owner = msg.sender; \r\n        VOTERS[0x5B38Da6a701c568545dCfcB03FcB875f56beddC4] = true;\r\n        VOTERS[0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2] = true;\r\n        VOTERS[0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db] = true;\r\n    }\r\n\r\n    function setContractAddress(address _contractAddress) public onlyOwner {\r\n        require(msg.sender==owner);\r\n        contractAddress = _contractAddress;\r\n    }\r\n\r\n    function giveUserVotingPower(address voter_address) public onlyVoters noZeroAddress(voter_address){\r\n        \r\n    }\r\n\r\n    function getHolderStatus(address adr) public view returns(bool){\r\n        return VOTERS[adr];\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Vote/KeyHolder.sol": {
				"KeyHolderContract": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "VOTERS",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adr",
									"type": "address"
								}
							],
							"name": "getHolderStatus",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "voter_address",
									"type": "address"
								}
							],
							"name": "giveUserVotingPower",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_contractAddress",
									"type": "address"
								}
							],
							"name": "setContractAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Vote/KeyHolder.sol\":64:1145  contract KeyHolderContract{\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Vote/KeyHolder.sol\":485:741  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Vote/KeyHolder.sol\":518:528  msg.sender */\n  caller\n    /* \"contracts/Vote/KeyHolder.sol\":510:515  owner */\n  0x00\n  dup1\n    /* \"contracts/Vote/KeyHolder.sol\":510:528  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Vote/KeyHolder.sol\":593:597  true */\n  0x01\n    /* \"contracts/Vote/KeyHolder.sol\":540:546  VOTERS */\n  0x02\n    /* \"contracts/Vote/KeyHolder.sol\":540:590  VOTERS[0x5B38Da6a701c568545dCfcB03FcB875f56beddC4] */\n  0x00\n    /* \"contracts/Vote/KeyHolder.sol\":547:589  0x5B38Da6a701c568545dCfcB03FcB875f56beddC4 */\n  0x5b38da6a701c568545dcfcb03fcb875f56beddc4\n    /* \"contracts/Vote/KeyHolder.sol\":540:590  VOTERS[0x5B38Da6a701c568545dCfcB03FcB875f56beddC4] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/Vote/KeyHolder.sol\":540:597  VOTERS[0x5B38Da6a701c568545dCfcB03FcB875f56beddC4] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Vote/KeyHolder.sol\":661:665  true */\n  0x01\n    /* \"contracts/Vote/KeyHolder.sol\":608:614  VOTERS */\n  0x02\n    /* \"contracts/Vote/KeyHolder.sol\":608:658  VOTERS[0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2] */\n  0x00\n    /* \"contracts/Vote/KeyHolder.sol\":615:657  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n  0xab8483f64d9c6d1ecf9b849ae677dd3315835cb2\n    /* \"contracts/Vote/KeyHolder.sol\":608:658  VOTERS[0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/Vote/KeyHolder.sol\":608:665  VOTERS[0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Vote/KeyHolder.sol\":729:733  true */\n  0x01\n    /* \"contracts/Vote/KeyHolder.sol\":676:682  VOTERS */\n  0x02\n    /* \"contracts/Vote/KeyHolder.sol\":676:726  VOTERS[0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db] */\n  0x00\n    /* \"contracts/Vote/KeyHolder.sol\":683:725  0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db */\n  0x4b20993bc481177ec7e8f571cecae8a9e22c02db\n    /* \"contracts/Vote/KeyHolder.sol\":676:726  VOTERS[0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/Vote/KeyHolder.sol\":676:733  VOTERS[0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Vote/KeyHolder.sol\":64:1145  contract KeyHolderContract{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Vote/KeyHolder.sol\":64:1145  contract KeyHolderContract{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0e49d341\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x20e82a26\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x477bddaa\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x6cb4c7ec\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Vote/KeyHolder.sol\":918:1034  function giveUserVotingPower(address voter_address) public onlyVoters noZeroAddress(voter_address){\r... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/Vote/KeyHolder.sol\":1042:1142  function getHolderStatus(address adr) public view returns(bool){\r... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Vote/KeyHolder.sol\":749:910  function setContractAddress(address _contractAddress) public onlyOwner {\r... */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_17:\n      tag_18\n      jump\t// in\n    tag_16:\n      stop\n        /* \"contracts/Vote/KeyHolder.sol\":167:203  mapping(address=>bool) public VOTERS */\n    tag_6:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_20:\n      tag_21\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Vote/KeyHolder.sol\":918:1034  function giveUserVotingPower(address voter_address) public onlyVoters noZeroAddress(voter_address){\r... */\n    tag_10:\n        /* \"contracts/Vote/KeyHolder.sol\":438:444  VOTERS */\n      0x02\n        /* \"contracts/Vote/KeyHolder.sol\":438:456  VOTERS[msg.sender] */\n      0x00\n        /* \"contracts/Vote/KeyHolder.sol\":445:455  msg.sender */\n      caller\n        /* \"contracts/Vote/KeyHolder.sol\":438:456  VOTERS[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Vote/KeyHolder.sol\":430:457  require(VOTERS[msg.sender]) */\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n        /* \"contracts/Vote/KeyHolder.sol\":1002:1015  voter_address */\n      dup1\n        /* \"contracts/Vote/KeyHolder.sol\":369:370  0 */\n      0x00\n        /* \"contracts/Vote/KeyHolder.sol\":356:371  adr!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Vote/KeyHolder.sol\":356:359  adr */\n      dup2\n        /* \"contracts/Vote/KeyHolder.sol\":356:371  adr!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Vote/KeyHolder.sol\":348:372  require(adr!=address(0)) */\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n        /* \"contracts/Vote/KeyHolder.sol\":468:469  _ */\n      pop\n        /* \"contracts/Vote/KeyHolder.sol\":918:1034  function giveUserVotingPower(address voter_address) public onlyVoters noZeroAddress(voter_address){\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Vote/KeyHolder.sol\":1042:1142  function getHolderStatus(address adr) public view returns(bool){\r... */\n    tag_13:\n        /* \"contracts/Vote/KeyHolder.sol\":1100:1104  bool */\n      0x00\n        /* \"contracts/Vote/KeyHolder.sol\":1123:1129  VOTERS */\n      0x02\n        /* \"contracts/Vote/KeyHolder.sol\":1123:1134  VOTERS[adr] */\n      0x00\n        /* \"contracts/Vote/KeyHolder.sol\":1130:1133  adr */\n      dup4\n        /* \"contracts/Vote/KeyHolder.sol\":1123:1134  VOTERS[adr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Vote/KeyHolder.sol\":1116:1134  return VOTERS[adr] */\n      swap1\n      pop\n        /* \"contracts/Vote/KeyHolder.sol\":1042:1142  function getHolderStatus(address adr) public view returns(bool){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Vote/KeyHolder.sol\":749:910  function setContractAddress(address _contractAddress) public onlyOwner {\r... */\n    tag_18:\n        /* \"contracts/Vote/KeyHolder.sol\":268:273  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Vote/KeyHolder.sol\":254:273  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Vote/KeyHolder.sol\":254:264  msg.sender */\n      caller\n        /* \"contracts/Vote/KeyHolder.sol\":254:273  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Vote/KeyHolder.sol\":246:274  require(msg.sender == owner) */\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n        /* \"contracts/Vote/KeyHolder.sol\":851:856  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Vote/KeyHolder.sol\":839:856  msg.sender==owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Vote/KeyHolder.sol\":839:849  msg.sender */\n      caller\n        /* \"contracts/Vote/KeyHolder.sol\":839:856  msg.sender==owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Vote/KeyHolder.sol\":831:857  require(msg.sender==owner) */\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n        /* \"contracts/Vote/KeyHolder.sol\":886:902  _contractAddress */\n      dup1\n        /* \"contracts/Vote/KeyHolder.sol\":868:883  contractAddress */\n      0x01\n      0x00\n        /* \"contracts/Vote/KeyHolder.sol\":868:902  contractAddress = _contractAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Vote/KeyHolder.sol\":749:910  function setContractAddress(address _contractAddress) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Vote/KeyHolder.sol\":167:203  mapping(address=>bool) public VOTERS */\n    tag_21:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_34:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_36\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_9:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_39\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":228:347   */\n    tag_39:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_42\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_34\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:596   */\n    tag_43:\n        /* \"#utility.yul\":568:589   */\n      tag_45\n        /* \"#utility.yul\":583:588   */\n      dup2\n        /* \"#utility.yul\":568:589   */\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":563:566   */\n      dup3\n        /* \"#utility.yul\":556:590   */\n      mstore\n        /* \"#utility.yul\":487:596   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":602:812   */\n    tag_15:\n        /* \"#utility.yul\":689:693   */\n      0x00\n        /* \"#utility.yul\":727:729   */\n      0x20\n        /* \"#utility.yul\":716:725   */\n      dup3\n        /* \"#utility.yul\":712:730   */\n      add\n        /* \"#utility.yul\":704:730   */\n      swap1\n      pop\n        /* \"#utility.yul\":740:805   */\n      tag_48\n        /* \"#utility.yul\":802:803   */\n      0x00\n        /* \"#utility.yul\":791:800   */\n      dup4\n        /* \"#utility.yul\":787:804   */\n      add\n        /* \"#utility.yul\":778:784   */\n      dup5\n        /* \"#utility.yul\":740:805   */\n      tag_43\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":602:812   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":899:995   */\n    tag_51:\n        /* \"#utility.yul\":936:943   */\n      0x00\n        /* \"#utility.yul\":965:989   */\n      tag_53\n        /* \"#utility.yul\":983:988   */\n      dup3\n        /* \"#utility.yul\":965:989   */\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":954:989   */\n      swap1\n      pop\n        /* \"#utility.yul\":899:995   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1001:1091   */\n    tag_46:\n        /* \"#utility.yul\":1035:1042   */\n      0x00\n        /* \"#utility.yul\":1078:1083   */\n      dup2\n        /* \"#utility.yul\":1071:1084   */\n      iszero\n        /* \"#utility.yul\":1064:1085   */\n      iszero\n        /* \"#utility.yul\":1053:1085   */\n      swap1\n      pop\n        /* \"#utility.yul\":1001:1091   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1097:1223   */\n    tag_54:\n        /* \"#utility.yul\":1134:1141   */\n      0x00\n        /* \"#utility.yul\":1174:1216   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1167:1172   */\n      dup3\n        /* \"#utility.yul\":1163:1217   */\n      and\n        /* \"#utility.yul\":1152:1217   */\n      swap1\n      pop\n        /* \"#utility.yul\":1097:1223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1352:1469   */\n    tag_41:\n        /* \"#utility.yul\":1461:1462   */\n      0x00\n        /* \"#utility.yul\":1458:1459   */\n      dup1\n        /* \"#utility.yul\":1451:1463   */\n      revert\n        /* \"#utility.yul\":1475:1597   */\n    tag_37:\n        /* \"#utility.yul\":1548:1572   */\n      tag_61\n        /* \"#utility.yul\":1566:1571   */\n      dup2\n        /* \"#utility.yul\":1548:1572   */\n      tag_51\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1541:1546   */\n      dup2\n        /* \"#utility.yul\":1538:1573   */\n      eq\n        /* \"#utility.yul\":1528:1591   */\n      tag_62\n      jumpi\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1584:1585   */\n      dup1\n        /* \"#utility.yul\":1577:1589   */\n      revert\n        /* \"#utility.yul\":1528:1591   */\n    tag_62:\n        /* \"#utility.yul\":1475:1597   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220820c04d0b0d888bc97415d9f631c3d523575cc104151c37082e20aee3ee4295d64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_73": {
									"entryPoint": null,
									"id": 73,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160026000735b38da6a701c568545dcfcb03fcb875f56beddc473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016002600073ab8483f64d9c6d1ecf9b849ae677dd3315835cb273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160026000734b20993bc481177ec7e8f571cecae8a9e22c02db73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506103e4806101a46000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630e49d3411461005157806320e82a261461006d578063477bddaa1461009d5780636cb4c7ec146100b9575b600080fd5b61006b600480360381019061006691906102fd565b6100e9565b005b610087600480360381019061008291906102fd565b61017e565b6040516100949190610339565b60405180910390f35b6100b760048036038101906100b291906102fd565b6101d4565b005b6100d360048036038101906100ce91906102fd565b6102c8565b6040516100e09190610339565b60405180910390f35b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661013f57600080fd5b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561017a57600080fd5b5050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461022c57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461028457600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60026020528060005260406000206000915054906101000a900460ff1681565b6000813590506102f781610397565b92915050565b60006020828403121561031357610312610392565b5b6000610321848285016102e8565b91505092915050565b61033381610366565b82525050565b600060208201905061034e600083018461032a565b92915050565b600061035f82610372565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6103a081610354565b81146103ab57600080fd5b5056fea2646970667358221220820c04d0b0d888bc97415d9f631c3d523575cc104151c37082e20aee3ee4295d64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH20 0x5B38DA6A701C568545DCFCB03FCB875F56BEDDC4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH20 0x4B20993BC481177EC7E8F571CECAE8A9E22C02DB PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x3E4 DUP1 PUSH2 0x1A4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE49D341 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x20E82A26 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x477BDDAA EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x6CB4C7EC EQ PUSH2 0xB9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x2FD JUMP JUMPDEST PUSH2 0xE9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x2FD JUMP JUMPDEST PUSH2 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x2FD JUMP JUMPDEST PUSH2 0x1D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x2FD JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F7 DUP2 PUSH2 0x397 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x313 JUMPI PUSH2 0x312 PUSH2 0x392 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x321 DUP5 DUP3 DUP6 ADD PUSH2 0x2E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x333 DUP2 PUSH2 0x366 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x32A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F DUP3 PUSH2 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A0 DUP2 PUSH2 0x354 JUMP JUMPDEST DUP2 EQ PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 0xC DIV 0xD0 0xB0 0xD8 DUP9 0xBC SWAP8 COINBASE 0x5D SWAP16 PUSH4 0x1C3D5235 PUSH22 0xCC104151C37082E20AEE3EE4295D64736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "64:1081:0:-:0;;;485:256;;;;;;;;;;518:10;510:5;;:18;;;;;;;;;;;;;;;;;;593:4;540:6;:50;547:42;540:50;;;;;;;;;;;;;;;;:57;;;;;;;;;;;;;;;;;;661:4;608:6;:50;615:42;608:50;;;;;;;;;;;;;;;;:57;;;;;;;;;;;;;;;;;;729:4;676:6;:50;683:42;676:50;;;;;;;;;;;;;;;;:57;;;;;;;;;;;;;;;;;;64:1081;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@VOTERS_9": {
									"entryPoint": 712,
									"id": 9,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getHolderStatus_115": {
									"entryPoint": 382,
									"id": 115,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@giveUserVotingPower_103": {
									"entryPoint": 233,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setContractAddress_92": {
									"entryPoint": 468,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 914,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1600:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:1"
															},
															"nodeType": "YulIf",
															"src": "228:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													}
												],
												"src": "152:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "563:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "583:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "568:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "568:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "534:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "541:3:1",
														"type": ""
													}
												],
												"src": "487:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "694:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "704:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "716:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "727:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "712:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "712:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "704:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "778:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "791:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "802:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "787:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "787:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "740:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "740:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "740:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "666:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "678:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "689:4:1",
														"type": ""
													}
												],
												"src": "602:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "858:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "868:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "884:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "878:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "868:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "851:6:1",
														"type": ""
													}
												],
												"src": "818:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "944:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "954:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "983:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "965:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "965:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "954:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "926:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "936:7:1",
														"type": ""
													}
												],
												"src": "899:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1043:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1053:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1078:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1071:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1071:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1064:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1064:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1053:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1025:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1035:7:1",
														"type": ""
													}
												],
												"src": "1001:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1142:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1152:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1167:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1174:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1163:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1163:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1152:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1124:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1134:7:1",
														"type": ""
													}
												],
												"src": "1097:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1318:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1335:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1338:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1328:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1328:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1328:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1229:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1441:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1458:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1461:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1451:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1451:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1451:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1352:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1518:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1575:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1584:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1587:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1577:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1577:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1577:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1541:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1566:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1548:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1548:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1538:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1538:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1531:43:1"
															},
															"nodeType": "YulIf",
															"src": "1528:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1511:5:1",
														"type": ""
													}
												],
												"src": "1475:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80630e49d3411461005157806320e82a261461006d578063477bddaa1461009d5780636cb4c7ec146100b9575b600080fd5b61006b600480360381019061006691906102fd565b6100e9565b005b610087600480360381019061008291906102fd565b61017e565b6040516100949190610339565b60405180910390f35b6100b760048036038101906100b291906102fd565b6101d4565b005b6100d360048036038101906100ce91906102fd565b6102c8565b6040516100e09190610339565b60405180910390f35b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661013f57600080fd5b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561017a57600080fd5b5050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461022c57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461028457600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60026020528060005260406000206000915054906101000a900460ff1681565b6000813590506102f781610397565b92915050565b60006020828403121561031357610312610392565b5b6000610321848285016102e8565b91505092915050565b61033381610366565b82525050565b600060208201905061034e600083018461032a565b92915050565b600061035f82610372565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6103a081610354565b81146103ab57600080fd5b5056fea2646970667358221220820c04d0b0d888bc97415d9f631c3d523575cc104151c37082e20aee3ee4295d64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE49D341 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x20E82A26 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x477BDDAA EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x6CB4C7EC EQ PUSH2 0xB9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x2FD JUMP JUMPDEST PUSH2 0xE9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x2FD JUMP JUMPDEST PUSH2 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x2FD JUMP JUMPDEST PUSH2 0x1D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x2FD JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F7 DUP2 PUSH2 0x397 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x313 JUMPI PUSH2 0x312 PUSH2 0x392 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x321 DUP5 DUP3 DUP6 ADD PUSH2 0x2E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x333 DUP2 PUSH2 0x366 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x32A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F DUP3 PUSH2 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A0 DUP2 PUSH2 0x354 JUMP JUMPDEST DUP2 EQ PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 0xC DIV 0xD0 0xB0 0xD8 DUP9 0xBC SWAP8 COINBASE 0x5D SWAP16 PUSH4 0x1C3D5235 PUSH22 0xCC104151C37082E20AEE3EE4295D64736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "64:1081:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;918:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1042:100;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;749:161;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;167:36;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;918:116;438:6;:18;445:10;438:18;;;;;;;;;;;;;;;;;;;;;;;;;430:27;;;;;;1002:13:::1;369:1;356:15;;:3;:15;;;;348:24;;;::::0;::::1;;468:1;918:116:::0;:::o;1042:100::-;1100:4;1123:6;:11;1130:3;1123:11;;;;;;;;;;;;;;;;;;;;;;;;;1116:18;;1042:100;;;:::o;749:161::-;268:5;;;;;;;;;;254:19;;:10;:19;;;246:28;;;;;;851:5:::1;::::0;::::1;;;;;;;;839:17;;:10;:17;;;831:26;;;::::0;::::1;;886:16;868:15;;:34;;;;;;;;;;;;;;;;;;749:161:::0;:::o;167:36::-;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:109::-;568:21;583:5;568:21;:::i;:::-;563:3;556:34;487:109;;:::o;602:210::-;689:4;727:2;716:9;712:18;704:26;;740:65;802:1;791:9;787:17;778:6;740:65;:::i;:::-;602:210;;;;:::o;899:96::-;936:7;965:24;983:5;965:24;:::i;:::-;954:35;;899:96;;;:::o;1001:90::-;1035:7;1078:5;1071:13;1064:21;1053:32;;1001:90;;;:::o;1097:126::-;1134:7;1174:42;1167:5;1163:54;1152:65;;1097:126;;;:::o;1352:117::-;1461:1;1458;1451:12;1475:122;1548:24;1566:5;1548:24;:::i;:::-;1541:5;1538:35;1528:63;;1587:1;1584;1577:12;1528:63;1475:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "199200",
								"executionCost": "97582",
								"totalCost": "296782"
							},
							"external": {
								"VOTERS(address)": "2889",
								"getHolderStatus(address)": "2883",
								"giveUserVotingPower(address)": "2718",
								"setContractAddress(address)": "29078"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 64,
									"end": 1145,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 64,
									"end": 1145,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 64,
									"end": 1145,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 485,
									"end": 741,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 485,
									"end": 741,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 485,
									"end": 741,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 485,
									"end": 741,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 485,
									"end": 741,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 485,
									"end": 741,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 485,
									"end": 741,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 485,
									"end": 741,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 485,
									"end": 741,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 485,
									"end": 741,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 485,
									"end": 741,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 518,
									"end": 528,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 510,
									"end": 515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 510,
									"end": 515,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 510,
									"end": 528,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 510,
									"end": 528,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 510,
									"end": 528,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 510,
									"end": 528,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 510,
									"end": 528,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 510,
									"end": 528,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 510,
									"end": 528,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 510,
									"end": 528,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 510,
									"end": 528,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 510,
									"end": 528,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 510,
									"end": 528,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 510,
									"end": 528,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 510,
									"end": 528,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 510,
									"end": 528,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 510,
									"end": 528,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 510,
									"end": 528,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 510,
									"end": 528,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 510,
									"end": 528,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 593,
									"end": 597,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 540,
									"end": 546,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 540,
									"end": 590,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 547,
									"end": 589,
									"name": "PUSH",
									"source": 0,
									"value": "5B38DA6A701C568545DCFCB03FCB875F56BEDDC4"
								},
								{
									"begin": 540,
									"end": 590,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 540,
									"end": 590,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 540,
									"end": 590,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 540,
									"end": 590,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 540,
									"end": 590,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 540,
									"end": 590,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 540,
									"end": 590,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 540,
									"end": 590,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 540,
									"end": 590,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 540,
									"end": 590,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 540,
									"end": 590,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 540,
									"end": 590,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 540,
									"end": 590,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 540,
									"end": 590,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 540,
									"end": 590,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 540,
									"end": 590,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 540,
									"end": 597,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 540,
									"end": 597,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 540,
									"end": 597,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 540,
									"end": 597,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 540,
									"end": 597,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 540,
									"end": 597,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 540,
									"end": 597,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 540,
									"end": 597,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 540,
									"end": 597,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 540,
									"end": 597,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 540,
									"end": 597,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 540,
									"end": 597,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 540,
									"end": 597,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 540,
									"end": 597,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 540,
									"end": 597,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 540,
									"end": 597,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 540,
									"end": 597,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 540,
									"end": 597,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 661,
									"end": 665,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 608,
									"end": 614,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 608,
									"end": 658,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 615,
									"end": 657,
									"name": "PUSH",
									"source": 0,
									"value": "AB8483F64D9C6D1ECF9B849AE677DD3315835CB2"
								},
								{
									"begin": 608,
									"end": 658,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 608,
									"end": 658,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 608,
									"end": 658,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 608,
									"end": 658,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 608,
									"end": 658,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 608,
									"end": 658,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 608,
									"end": 658,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 608,
									"end": 658,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 608,
									"end": 658,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 608,
									"end": 658,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 608,
									"end": 658,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 608,
									"end": 658,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 608,
									"end": 658,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 608,
									"end": 658,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 608,
									"end": 658,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 608,
									"end": 658,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 608,
									"end": 665,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 608,
									"end": 665,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 608,
									"end": 665,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 608,
									"end": 665,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 608,
									"end": 665,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 608,
									"end": 665,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 608,
									"end": 665,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 608,
									"end": 665,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 608,
									"end": 665,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 608,
									"end": 665,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 608,
									"end": 665,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 608,
									"end": 665,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 608,
									"end": 665,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 608,
									"end": 665,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 608,
									"end": 665,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 608,
									"end": 665,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 608,
									"end": 665,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 608,
									"end": 665,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 729,
									"end": 733,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 676,
									"end": 682,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 676,
									"end": 726,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 683,
									"end": 725,
									"name": "PUSH",
									"source": 0,
									"value": "4B20993BC481177EC7E8F571CECAE8A9E22C02DB"
								},
								{
									"begin": 676,
									"end": 726,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 676,
									"end": 726,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 676,
									"end": 726,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 676,
									"end": 726,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 676,
									"end": 726,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 676,
									"end": 726,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 676,
									"end": 726,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 726,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 676,
									"end": 726,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 676,
									"end": 726,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 676,
									"end": 726,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 676,
									"end": 726,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 726,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 676,
									"end": 726,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 676,
									"end": 726,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 676,
									"end": 726,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 676,
									"end": 733,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 676,
									"end": 733,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 676,
									"end": 733,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 676,
									"end": 733,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 676,
									"end": 733,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 676,
									"end": 733,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 676,
									"end": 733,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 676,
									"end": 733,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 676,
									"end": 733,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 676,
									"end": 733,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 676,
									"end": 733,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 676,
									"end": 733,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 676,
									"end": 733,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 676,
									"end": 733,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 676,
									"end": 733,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 676,
									"end": 733,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 676,
									"end": 733,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 676,
									"end": 733,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 64,
									"end": 1145,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 1145,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 64,
									"end": 1145,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 1145,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 1145,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 64,
									"end": 1145,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 1145,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220820c04d0b0d888bc97415d9f631c3d523575cc104151c37082e20aee3ee4295d64736f6c63430008070033",
									".code": [
										{
											"begin": 64,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "E49D341"
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "20E82A26"
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "477BDDAA"
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "6CB4C7EC"
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1145,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 918,
											"end": 1034,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 918,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 918,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 918,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 918,
											"end": 1034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 918,
											"end": 1034,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 918,
											"end": 1034,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 918,
											"end": 1034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 918,
											"end": 1034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 918,
											"end": 1034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 918,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 918,
											"end": 1034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 918,
											"end": 1034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 918,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 918,
											"end": 1034,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 918,
											"end": 1034,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 918,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 918,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 918,
											"end": 1034,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 918,
											"end": 1034,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 918,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 918,
											"end": 1034,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 749,
											"end": 910,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 749,
											"end": 910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 749,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 749,
											"end": 910,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 749,
											"end": 910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 749,
											"end": 910,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 749,
											"end": 910,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 749,
											"end": 910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 749,
											"end": 910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 749,
											"end": 910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 749,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 749,
											"end": 910,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 749,
											"end": 910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 749,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 749,
											"end": 910,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 749,
											"end": 910,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 749,
											"end": 910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 749,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 749,
											"end": 910,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 749,
											"end": 910,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 749,
											"end": 910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 749,
											"end": 910,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 167,
											"end": 203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 167,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 167,
											"end": 203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 167,
											"end": 203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 167,
											"end": 203,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 167,
											"end": 203,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 167,
											"end": 203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 167,
											"end": 203,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 167,
											"end": 203,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 167,
											"end": 203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 167,
											"end": 203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 167,
											"end": 203,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 167,
											"end": 203,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 167,
											"end": 203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 918,
											"end": 1034,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 918,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 438,
											"end": 444,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 438,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 455,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 438,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 438,
											"end": 456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 438,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 438,
											"end": 456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 438,
											"end": 456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 438,
											"end": 456,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 438,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 438,
											"end": 456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 438,
											"end": 456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 438,
											"end": 456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 438,
											"end": 456,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 438,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 438,
											"end": 456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 438,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 438,
											"end": 456,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 438,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 438,
											"end": 456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 438,
											"end": 456,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 438,
											"end": 456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 438,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 438,
											"end": 456,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 438,
											"end": 456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 438,
											"end": 456,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 438,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 438,
											"end": 456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 430,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 430,
											"end": 457,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 430,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 430,
											"end": 457,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 430,
											"end": 457,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 430,
											"end": 457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 369,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 356,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 356,
											"end": 371,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 356,
											"end": 359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 356,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 356,
											"end": 371,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 356,
											"end": 371,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 356,
											"end": 371,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 348,
											"end": 372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 372,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 372,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 348,
											"end": 372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 468,
											"end": 469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 918,
											"end": 1034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 918,
											"end": 1034,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1129,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1123,
											"end": 1134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 1133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1134,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1123,
											"end": 1134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1134,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1123,
											"end": 1134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1134,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1134,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1123,
											"end": 1134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1134,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1134,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1123,
											"end": 1134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1134,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1134,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1134,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1123,
											"end": 1134,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1134,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1134,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1123,
											"end": 1134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1142,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 749,
											"end": 910,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 749,
											"end": 910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 268,
											"end": 273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 273,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 268,
											"end": 273,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 268,
											"end": 273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 268,
											"end": 273,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 268,
											"end": 273,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 268,
											"end": 273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 268,
											"end": 273,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 268,
											"end": 273,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 268,
											"end": 273,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 254,
											"end": 273,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 254,
											"end": 273,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 254,
											"end": 264,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 254,
											"end": 273,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 254,
											"end": 273,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 254,
											"end": 273,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 246,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 246,
											"end": 274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 246,
											"end": 274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 246,
											"end": 274,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 246,
											"end": 274,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 246,
											"end": 274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 851,
											"end": 856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 851,
											"end": 856,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 851,
											"end": 856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 851,
											"end": 856,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 851,
											"end": 856,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 851,
											"end": 856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 851,
											"end": 856,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 851,
											"end": 856,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 839,
											"end": 856,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 856,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 839,
											"end": 849,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 839,
											"end": 856,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 856,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 839,
											"end": 856,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 831,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 831,
											"end": 857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 831,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 831,
											"end": 857,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 831,
											"end": 857,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 831,
											"end": 857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 868,
											"end": 883,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 868,
											"end": 883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 868,
											"end": 902,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 868,
											"end": 902,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 868,
											"end": 902,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 868,
											"end": 902,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 868,
											"end": 902,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 868,
											"end": 902,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 868,
											"end": 902,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 868,
											"end": 902,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 868,
											"end": 902,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 868,
											"end": 902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 868,
											"end": 902,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 868,
											"end": 902,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 868,
											"end": 902,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 868,
											"end": 902,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 868,
											"end": 902,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 868,
											"end": 902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 868,
											"end": 902,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 868,
											"end": 902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 749,
											"end": 910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 749,
											"end": 910,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 167,
											"end": 203,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 167,
											"end": 203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 167,
											"end": 203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 203,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 167,
											"end": 203,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 167,
											"end": 203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 167,
											"end": 203,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 596,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 487,
											"end": 596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 568,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 568,
											"end": 589,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 568,
											"end": 589,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 568,
											"end": 589,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 563,
											"end": 566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 556,
											"end": 590,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 596,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 602,
											"end": 812,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 602,
											"end": 812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 689,
											"end": 693,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 729,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 725,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 712,
											"end": 730,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 704,
											"end": 730,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 704,
											"end": 730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 740,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 802,
											"end": 803,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 800,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 787,
											"end": 804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 778,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 740,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 740,
											"end": 805,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 740,
											"end": 805,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 740,
											"end": 805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 602,
											"end": 812,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 602,
											"end": 812,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 602,
											"end": 812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 602,
											"end": 812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 602,
											"end": 812,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 899,
											"end": 995,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 899,
											"end": 995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 936,
											"end": 943,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 983,
											"end": 988,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 965,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 965,
											"end": 989,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 965,
											"end": 989,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 965,
											"end": 989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 954,
											"end": 989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 954,
											"end": 989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 899,
											"end": 995,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 899,
											"end": 995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 899,
											"end": 995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 899,
											"end": 995,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1035,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 1083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1071,
											"end": 1084,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1091,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1141,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1174,
											"end": 1216,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1167,
											"end": 1172,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1217,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1223,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1352,
											"end": 1469,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1352,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1458,
											"end": 1459,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1451,
											"end": 1463,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1566,
											"end": 1571,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1548,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1573,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1528,
											"end": 1591,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1589,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1591,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1528,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1475,
											"end": 1597,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"VOTERS(address)": "6cb4c7ec",
							"getHolderStatus(address)": "20e82a26",
							"giveUserVotingPower(address)": "0e49d341",
							"setContractAddress(address)": "477bddaa"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"VOTERS\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"getHolderStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter_address\",\"type\":\"address\"}],\"name\":\"giveUserVotingPower\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"setContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Vote/KeyHolder.sol\":\"KeyHolderContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Vote/KeyHolder.sol\":{\"keccak256\":\"0x89b1dd3d2acfea8285daad1d5e492d23e8b5d42ff80e6f552f460c63be177592\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8ce61dfaa52d8bb11f312c8779dd1fcf573b95b9d9af3cdb5a82af040992c5bc\",\"dweb:/ipfs/QmSykPRZ6CDPEBTBydhFFSSDhEEiNpgyoXYEr3t2XfTtvs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Vote/KeyHolder.sol:KeyHolderContract",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "contracts/Vote/KeyHolder.sol:KeyHolderContract",
								"label": "contractAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 9,
								"contract": "contracts/Vote/KeyHolder.sol:KeyHolderContract",
								"label": "VOTERS",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Vote/KeyHolder.sol": {
				"ast": {
					"absolutePath": "contracts/Vote/KeyHolder.sol",
					"exportedSymbols": {
						"KeyHolderContract": [
							116
						]
					},
					"id": 117,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 116,
							"linearizedBaseContracts": [
								116
							],
							"name": "KeyHolderContract",
							"nameLocation": "73:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "115:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 116,
									"src": "99:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "99:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "contractAddress",
									"nameLocation": "143:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 116,
									"src": "127:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "127:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "6cb4c7ec",
									"id": 9,
									"mutability": "mutable",
									"name": "VOTERS",
									"nameLocation": "197:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 116,
									"src": "167:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 8,
										"keyType": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "175:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "167:22:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 7,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "184:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "235:59:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 12,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "254:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "254:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 14,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "268:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "254:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 11,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "246:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "246:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 17,
												"nodeType": "ExpressionStatement",
												"src": "246:28:0"
											},
											{
												"id": 18,
												"nodeType": "PlaceholderStatement",
												"src": "285:1:0"
											}
										]
									},
									"id": 20,
									"name": "onlyOwner",
									"nameLocation": "226:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "235:0:0"
									},
									"src": "217:77:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "337:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 25,
																"name": "adr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "356:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 28,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "369:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 27,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "361:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 26,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "361:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "361:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "356:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 24,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "348:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "348:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 32,
												"nodeType": "ExpressionStatement",
												"src": "348:24:0"
											},
											{
												"id": 33,
												"nodeType": "PlaceholderStatement",
												"src": "383:1:0"
											}
										]
									},
									"id": 35,
									"name": "noZeroAddress",
									"nameLocation": "311:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "adr",
												"nameLocation": "333:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "325:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:13:0"
									},
									"src": "302:90:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "419:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 38,
																"name": "VOTERS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "438:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 41,
															"indexExpression": {
																"expression": {
																	"id": 39,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "445:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "445:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "438:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 37,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "430:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "430:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "430:27:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "468:1:0"
											}
										]
									},
									"id": 46,
									"name": "onlyVoters",
									"nameLocation": "409:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "419:0:0"
									},
									"src": "400:77:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "499:242:0",
										"statements": [
											{
												"expression": {
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 49,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "510:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 50,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "518:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "518:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "510:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "510:18:0"
											},
											{
												"expression": {
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 54,
															"name": "VOTERS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "540:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 56,
														"indexExpression": {
															"hexValue": "307835423338446136613730316335363835343564436663423033466342383735663536626564644334",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "547:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x5B38Da6a701c568545dCfcB03FcB875f56beddC4"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "540:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "593:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "540:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "540:57:0"
											},
											{
												"expression": {
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 60,
															"name": "VOTERS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "608:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 62,
														"indexExpression": {
															"hexValue": "307841623834383346363464394336643145634639623834394165363737644433333135383335636232",
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "615:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "608:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "661:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "608:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 65,
												"nodeType": "ExpressionStatement",
												"src": "608:57:0"
											},
											{
												"expression": {
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 66,
															"name": "VOTERS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "676:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 68,
														"indexExpression": {
															"hexValue": "307834423230393933426334383131373765633745386635373163654361453841396532324330326462",
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "683:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "676:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "729:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "676:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "676:57:0"
											}
										]
									},
									"id": 73,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "496:2:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "499:0:0"
									},
									"scope": 116,
									"src": "485:256:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "820:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 81,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "839:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "839:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 83,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "851:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "839:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 80,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "831:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "831:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "831:26:0"
											},
											{
												"expression": {
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 87,
														"name": "contractAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "868:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 88,
														"name": "_contractAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "868:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "868:34:0"
											}
										]
									},
									"functionSelector": "477bddaa",
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 78,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 77,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 20,
												"src": "810:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "810:9:0"
										}
									],
									"name": "setContractAddress",
									"nameLocation": "758:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "_contractAddress",
												"nameLocation": "785:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "777:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:26:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:0:0"
									},
									"scope": 116,
									"src": "749:161:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "1016:18:0",
										"statements": []
									},
									"functionSelector": "0e49d341",
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 97,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 96,
												"name": "onlyVoters",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "977:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "977:10:0"
										},
										{
											"arguments": [
												{
													"id": 99,
													"name": "voter_address",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 94,
													"src": "1002:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 100,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 98,
												"name": "noZeroAddress",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 35,
												"src": "988:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "988:28:0"
										}
									],
									"name": "giveUserVotingPower",
									"nameLocation": "927:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "voter_address",
												"nameLocation": "955:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "947:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "947:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "946:23:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1016:0:0"
									},
									"scope": 116,
									"src": "918:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "1105:37:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 110,
														"name": "VOTERS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "1123:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 112,
													"indexExpression": {
														"id": 111,
														"name": "adr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "1130:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1123:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 109,
												"id": 113,
												"nodeType": "Return",
												"src": "1116:18:0"
											}
										]
									},
									"functionSelector": "20e82a26",
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getHolderStatus",
									"nameLocation": "1051:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "adr",
												"nameLocation": "1075:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "1067:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1066:13:0"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "1100:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 107,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1100:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1099:6:0"
									},
									"scope": 116,
									"src": "1042:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 117,
							"src": "64:1081:0",
							"usedErrors": []
						}
					],
					"src": "37:1108:0"
				},
				"id": 0
			}
		}
	}
}