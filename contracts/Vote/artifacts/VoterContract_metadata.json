{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint16",
						"name": "proposalId",
						"type": "uint16"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "topic",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "voted",
						"type": "uint32"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "result",
						"type": "uint32"
					}
				],
				"name": "ProposalEnded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint16",
						"name": "proposalId",
						"type": "uint16"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "topic",
						"type": "string"
					}
				],
				"name": "ProposalStarted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint16",
						"name": "voteId",
						"type": "uint16"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "topic",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "voted",
						"type": "uint32"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "result",
						"type": "uint32"
					}
				],
				"name": "VotingEnded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint16",
						"name": "voteId",
						"type": "uint16"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "topic",
						"type": "string"
					}
				],
				"name": "VotingStarted",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "amIVOTER",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint16",
						"name": "id",
						"type": "uint16"
					}
				],
				"name": "closeProposal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint16",
						"name": "id",
						"type": "uint16"
					}
				],
				"name": "closeVoting",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint16",
						"name": "skip",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "take",
						"type": "uint16"
					}
				],
				"name": "getProposals",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint16",
								"name": "id",
								"type": "uint16"
							},
							{
								"internalType": "string",
								"name": "topic",
								"type": "string"
							},
							{
								"internalType": "uint32",
								"name": "voted",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "result",
								"type": "uint32"
							},
							{
								"internalType": "address",
								"name": "proposer",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "blockNumberStarted",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "blockNumberWillNotEndBefore",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "blockNumberClosed",
								"type": "uint256"
							},
							{
								"internalType": "enum VoterContract.VotingType",
								"name": "proposalType",
								"type": "uint8"
							}
						],
						"internalType": "struct VoterContract.Proposal[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "skip",
						"type": "uint8"
					},
					{
						"internalType": "uint8",
						"name": "take",
						"type": "uint8"
					}
				],
				"name": "getVotings",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint16",
								"name": "id",
								"type": "uint16"
							},
							{
								"internalType": "string",
								"name": "topic",
								"type": "string"
							},
							{
								"internalType": "uint32",
								"name": "voted",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "result",
								"type": "uint32"
							},
							{
								"internalType": "address",
								"name": "proposer",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "blockNumberStarted",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "blockNumberWillNotEndBefore",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "blockNumberClosed",
								"type": "uint256"
							},
							{
								"internalType": "enum VoterContract.VotingType",
								"name": "votingType",
								"type": "uint8"
							}
						],
						"internalType": "struct VoterContract.Voting[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "voterAddress",
						"type": "address"
					}
				],
				"name": "giveVotingPower",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "keyHolder",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum VoterContract.VotingType",
						"name": "_proposalType",
						"type": "uint8"
					},
					{
						"internalType": "string",
						"name": "_topic",
						"type": "string"
					}
				],
				"name": "openProposal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "proposalId",
				"outputs": [
					{
						"internalType": "uint16",
						"name": "",
						"type": "uint16"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint16",
						"name": "",
						"type": "uint16"
					}
				],
				"name": "proposals",
				"outputs": [
					{
						"internalType": "uint16",
						"name": "id",
						"type": "uint16"
					},
					{
						"internalType": "string",
						"name": "topic",
						"type": "string"
					},
					{
						"internalType": "uint32",
						"name": "voted",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "result",
						"type": "uint32"
					},
					{
						"internalType": "address",
						"name": "proposer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "blockNumberStarted",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "blockNumberWillNotEndBefore",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "blockNumberClosed",
						"type": "uint256"
					},
					{
						"internalType": "enum VoterContract.VotingType",
						"name": "proposalType",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "adr",
						"type": "address"
					}
				],
				"name": "setKeyHolderAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalVoterCount",
				"outputs": [
					{
						"internalType": "uint16",
						"name": "",
						"type": "uint16"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint16",
						"name": "id",
						"type": "uint16"
					},
					{
						"internalType": "uint8",
						"name": "vote",
						"type": "uint8"
					}
				],
				"name": "useVotePowerOne2Ten",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint16",
						"name": "id",
						"type": "uint16"
					},
					{
						"internalType": "uint8",
						"name": "vote",
						"type": "uint8"
					}
				],
				"name": "useVotePowerProposalOne2Ten",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint16",
						"name": "id",
						"type": "uint16"
					},
					{
						"internalType": "enum VoterContract.NoYes",
						"name": "vote",
						"type": "uint8"
					}
				],
				"name": "useVotePowerProposalYesNo",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint16",
						"name": "id",
						"type": "uint16"
					},
					{
						"internalType": "enum VoterContract.NoYes",
						"name": "vote",
						"type": "uint8"
					}
				],
				"name": "useVotePowerYesNo",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "voteId",
				"outputs": [
					{
						"internalType": "uint16",
						"name": "",
						"type": "uint16"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint16",
						"name": "",
						"type": "uint16"
					}
				],
				"name": "votings",
				"outputs": [
					{
						"internalType": "uint16",
						"name": "id",
						"type": "uint16"
					},
					{
						"internalType": "string",
						"name": "topic",
						"type": "string"
					},
					{
						"internalType": "uint32",
						"name": "voted",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "result",
						"type": "uint32"
					},
					{
						"internalType": "address",
						"name": "proposer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "blockNumberStarted",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "blockNumberWillNotEndBefore",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "blockNumberClosed",
						"type": "uint256"
					},
					{
						"internalType": "enum VoterContract.VotingType",
						"name": "votingType",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint16[]",
						"name": "idList",
						"type": "uint16[]"
					}
				],
				"name": "whatDidIVote",
				"outputs": [
					{
						"internalType": "uint8[]",
						"name": "",
						"type": "uint8[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint16[]",
						"name": "idList",
						"type": "uint16[]"
					}
				],
				"name": "whatDidIVoteForProposals",
				"outputs": [
					{
						"internalType": "uint8[]",
						"name": "",
						"type": "uint8[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Vote/VoterContract.sol": "VoterContract"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
			"license": "MIT",
			"urls": [
				"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
				"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"contracts/Vote/VoterContract.sol": {
			"keccak256": "0x85325405aaac77c13e51e84d23c8edfc88e3a088f82e1a0fa2e01c36e4a05fd4",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://4479a0c5c7d27d863c28a398530a76a1a01ab06b9ac08969bde1516c7a59ae3d",
				"dweb:/ipfs/QmQr9hkXqtPVVr49aKYrzCUrRnQcbezX2mgQtL5Hon7MbR"
			]
		}
	},
	"version": 1
}